// Input Formatter

const extractNumber = (value, fallback = 0) => {
    if (typeof value === 'string') {
        const parsedValue = parseFloat(value.replace(/[^0-9.]+/g, ''));
        return Number.isNaN(parsedValue) ? fallback : parsedValue;
    }
    return value;
};

const formatCurrency = (original, includeCents) => {
    let value = original;

    if (typeof value === 'string') {
        value = parseFloat(value.replace(/[^0-9.]+/g, '')) || 0;
    }

    value = includeCents ? value.toFixed(2) : value.toFixed(0);

    return value.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
};

const formatMonthDayYear = (value) => {
    const num = value.replace(/\D/g, '');
    const match = num.match(/(\d{2})(\d{1,2})?(\d*)/);

    // Restrict field to a maximum character count
    if (match && match[0].length > 8) {
        return value.substring(0, value.length - 1);
    }

    if (!match || !match[2]) {
        return num;
    } else if (!match[3]) {
        return `${match[1]} / ${match[2]}`;
    }

    return `${match[1]} / ${match[2]} / ${match[3]}`;
};

const formatMonthYear = (value) => {
    const num = value.replace(/\D/g, '');
    const match = num.match(/(\d{2})(\d*)/);

    // Restrict field to a maximum character count
    if (match && match[0].length > 6) {
        return value.substring(0, value.length - 1);
    }

    if (!match || !match[2]) {
        return num;
    }

    return `${match[1]} / ${match[2]}`;
};

const formatPhoneNumber = (value) => {
    const num = value.replace(/\D/g, '');
    const match = num.match(/(\d{3})(\d{1,3})?(\d*)/);

    // Restrict field to a maximum character count
    if (match && match[0].length > 10) {
        return value.substring(0, value.length - 1);
    }

    if (!match || !match[2]) {
        return num;
    } else if (!match[3]) {
        return `(${match[1]}) ${match[2]}`;
    }

    return `(${match[1]}) ${match[2]} - ${match[3]}`;
};

const formatSocialSecurityNumber = (value) => {
    const match = value.replace(/-/g, '').match(/(\d{3})(\d{1,2})?(\d*)/);

    if (!match || !match[2]) {
        return value;
    } else if (!match[3]) {
        return `${match[1]} - ${match[2]}`;
    }

    return `${match[1]} - ${match[2]} - ${match[3]}`;
};

export default {
    extractNumber,
    formatCurrency,
    formatMonthDayYear,
    formatMonthYear,
    formatPhoneNumber,
    formatSocialSecurityNumber,
};
