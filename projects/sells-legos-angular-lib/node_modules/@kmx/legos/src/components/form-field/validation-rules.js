// Validation Rules

const containsLetter = val => /[a-zA-Z]/g.test(val);
const containsNumber = val => /\d/g.test(val);
const containsSpaces = val => val.indexOf(' ') >= 0;
const isMinimumLength = (value, min) => value.length >= min;
const isNotAllSpaces = value => (!(value && value.trim() === ''));
const isNotOverMaxLength = (value, max) => value.length <= max;
const isRequired = value => (!!value);

const isValidEmail = (value) => {
    const lower = value.toLowerCase();
    // eslint-disable-next-line
    return /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-||_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+([a-z]+|\d|-|\.{0,1}|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])?([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/.test(lower);
};

// Validation according to: https://en.wikipedia.org/wiki/North_American_Numbering_Plan#cite_note-19
const isValidPhone = value => /^\(?([2-9][0-9]{2})\)?[-. ]?([2-9](?!11)[0-9]{2})[-. ]?([0-9]{4})$/.test(value);

const isValidSocialSecurityNumber = (value) => {
    const ssn = value.replace(/\D/g, '');

    if (!ssn.match(/(\d{3})(\d{2})(\d{4})/)) {
        return false;
    }

    const area = parseInt(ssn.substring(0, 3), 10);
    const group = parseInt(ssn.substring(3, 5), 10);
    const serial = parseInt(ssn.substring(5, 9), 10);

    if (area === 0 || area >= 900) {
        return false;
    }

    if (serial === 0 || group === 0) {
        return false;
    }

    // known bad numbers used by SSA or accidently in advertising
    if (ssn === '078051120' || ssn === '219099999') {
        return false;
    }

    return true;
};

const isValidString = (value, maxLength = 0) => {
    if (!this.isRequired(value)) {
        return false;
    }

    if (!this.isNotAllSpaces(value)) {
        return false;
    }

    if (maxLength !== 0 && this.isNotOverMaxLength(value, maxLength)) {
        return false;
    }

    return true;
};


export default {
    containsLetter,
    containsNumber,
    containsSpaces,
    isMinimumLength,
    isNotAllSpaces,
    isNotOverMaxLength,
    isRequired,
    isValidEmail,
    isValidPhone,
    isValidSocialSecurityNumber,
    isValidString,
};
