@import '~@material/select/mdc-select';

.mdc-select {

    /* This mixin requires the hex value to be passed without the leading hash: */
    @include mdc-select-dd-arrow-svg-bg_(336699, 1);

    @include mdc-select-ink-color($grey-600);
    @include mdc-select-bottom-line-color($grey-600);
    @include mdc-select-hover-bottom-line-color($grey-900);

    /*
        The following mixin instances are not needed, as the core MDC theming SCSS
        already yields these values (and bonus, with the CSS --variables intact):
    */
    // @include mdc-select-container-fill-color(transparent);
    // @include mdc-select-focused-bottom-line-color($kmx-blue-500);
    // @include mdc-select-focused-label-color($kmx-blue-500);

    &:hover {
        .mdc-floating-label {
            color: $grey-900;
        }
        &:not(.mdc-select--disabled) .mdc-select__native-control:hover {

            //  This mixin value seems to cause issues with lacking contrast on hover,
            //  especially when some options are disabled:
            color: $grey-900;
        }
    }

    .mdc-select__native-control {

        /* stylelint-disable-next-line */
        > option:disabled {
            // This ensures the disabled optionsâ€™ text value isn't affected by :hover color declarations:
            color: $grey-500;
        }
    }
}

.mdc-select--disabled,
.mdc-select[disabled] {


    //  This magic opacity value (.3825) yields the correct LEGOS $grey-500 / #9e9e9e / r-158 g-158 b-158:
    @include mdc-select-dd-arrow-svg-bg_(9e9e9e, .3825);

    border-bottom-width: 0;
    opacity: 1;

    .mdc-select__native-control{
        &:disabled {
            opacity: 1;
            border-bottom-style: solid;
            color: $kmx-theme-text-disabled-on-light;
            color: var(--kmx-theme-text-disabled-on-light, $grey-500);
        }
    }
    .mdc-floating-label {
        color: $kmx-theme-text-disabled-on-light;
        color: var(--kmx-theme-text-disabled-on-light, $grey-500);
    }
}
